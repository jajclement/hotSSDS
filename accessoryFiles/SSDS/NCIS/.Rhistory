library("NCIS"(
library("NCIS")
library("NCIS", lib.loc="/home/brickkm/NCIS")
NCIS
seq.import
?import
?import.seq
??import.seq
library('rtracklayer')
??import.seq
?import.seq
import.seq
import
bedI <- import.bed(system.file("I", "/data/brickkm/test/I.bed", package = "rtracklayer")
bedI <- import.bed(system.file("I", "/data/brickkm/test/I.bed", package = "rtracklayer"))
bedI <- import.bed(con="/data/brickkm/test/I.bed", asRangedData=F)
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed", asRangedData=F)
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed", asRangedData=T)
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed", asRangedData=F)
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed")
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed", asRangedData=F)
library(GenomicRanges)
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed", asRangedData=F)
bedI <- import(con="/data/brickkm/NCIS/test/I.bed", "bed", asRangedData=F)
bedI <- import(con="/data/brickkm/NCIS/test/I.bed", "bed")
bedI <- import.bed(con="/data/brickkm/NCIS/test/I.bed", asRangedData=F)
bedI <- import.bed(con="/data/brickkm/NCIS/test/IOK.bed", asRangedData=F)
bedT <- import.bed(con="/data/brickkm/NCIS/test/TOK.bed", asRangedData=F)
NCIS
NCIS(bedY,bedI,"BED")
bedI
NCIS
?NCIS
res <-NCIS(bedY,bedI,"BED")
bedY
bedI
bedI.ranges
bedI.strand
bedI->strand
p bedI->strand
bedI
?NCIS
?NCIS
ata("SEG3")
     res <- NCIS(chip.data, input.data, data.type="MCS")
data("SEG3")
seg3
chip.data
?NCIS
librart("shortRead")
library("shortRead")
library("ShortRead")
?NCIS
showMethods(class="AlignedRead")
?NCIS
bedI <- import.bed(con="/data/brickkm/NCIS/test/IOK.bed", asRangedData=T)
bedI <- import.bed(con="/data/brickkm/NCIS/test/IOK.bed", asRangedData=F)
NCIS(bedY,bedI,"BED")
NCIS(bedT,bedI,"BED")
NCIS("/data/brickkm/NCIS/test/IOK.bed","/data/brickkm/NCIS/test/IOK.bed","BED")
res <- NCIS("/data/brickkm/NCIS/test/IOK.bed","/data/brickkm/NCIS/test/TOK.bed","BED")
res
?NCIS
res <- NCIS("/data/brickkm/NCIS/test/TOK.bed","/data/brickkm/NCIS/test/IOK.bed","BED")
res
write(res, "", sep = "\t")
write(res<-est, "", sep = "\t")
write(res0->est, "", sep = "\t")
write(res->est, "", sep = "\t")
res->est
res
res->$est
res$est
write(res$est, "", sep = "\t")
write("RES="res$est, "", sep = "\t")
write(paste(res$est,res$pi0, sep = "\t"), "", sep = "\t")
write(paste(res$est,res$pi0,res$binsize.est sep = "\t"), "", sep = "\t")
write(paste(res$est,res$pi0,res$binsize.est,sep = "\t"), "", sep = "\t")
write(paste(res$est,res$pi0,res$binsize.est,res$seq.depthsep = "\t"), "", sep = "\t")
write(paste(res$est,res$pi0,res$binsize.est,res$seq.depth,sep = "\t"), "", sep = "\t")
write(paste(res$est,res$pi0,res$binsize.est,res$r.seq.depth,sep = "\t"), "", sep = "\t")
write(paste(res$est,res$pi0,res$binsize.est,res$r.seq.depth,sep = "\t"), "/data/brickkm/k.tst", sep = "\t")
q()
